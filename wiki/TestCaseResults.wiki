#labels Featured,Phase-Implementation,Phase-Requirements
#Results from the provided test cases.

= Introduction =
This page contains various results and interpretations from running the provided test cases in different environments for comparison.

=Environment 1=
  * OS: Windows XP SP3
  * CPU: 2.33GHz Intel Core 2 Duo
  * RAM: 3.25GB
  * Chasis: Dell Optiplex 755

== Observed Results ==
=== Internet Explorer 8.0.6001 Beta 2 ===
  * Interpreter: 2.016 - 2.031 ms average
  * Compiler: 0.875 - 0.891 ms average

=== Firefox 3.0.4 Results ===
  * Interpreter: 0.856 - 0.898 ms average
  * Compiler: 9.116 - 9.225 ms average

=== Firefox 3.2a1pre (nightly build 12/09/2009) JIT Enabled ===
  * Interpreter: 0.115 - 0.135 ms average
  * Compiler: 0.720 - 0.755 ms average

=== Google Chrome 0.4.154.29 ===
  * Interpreter: 0.155 - 0.198 ms average
  * Compiler: 0.021 - 0.065 ms average

=== Opera 9.62 10467 ===
  * Interpreter: 0.578 - 0.593 ms average
  * Compiler: 0.359 - 0.391 ms average

=== Safari 3.1.2 (525.21) ===
  * Interpreter: 0.656 - 0.687 ms average
  * Compiler: 1.047 - 1.062 ms average

== Interpretations and Thoughts ==
The usual results one would expect in comparing a compiled execution vs an interpreted execution would be that the compiled code is much faster than the interpreted code. This does not appear to be the case in most browsers (at least on Environment 1 for the time being). Chrome and V8 are clearly the winners in this phase of the tests, far outperforming any other JavaScript implementations. I find it interesting that the new Firefox nightly build with Tracemonkey enabled performs many orders of magnitude better than its predecessor, but still seems to favor the interpreter over the compiler. IE8, Opera, and Chrome mimic the traditional assumption that the compiled code should execute faster, while both versions of Firefox and Safari break this tradition.